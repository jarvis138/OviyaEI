name: Oviya EI CI/CD Pipeline

on:
  push:
    branches: [ dev, main ]
    paths:
      - 'production/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'production/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        cd production
        pip install -r requirements.txt
        pip install pytest pytest-asyncio

    - name: Run configuration validation
      run: |
        cd production
        python tests/test_config_loading.py

    - name: Run advanced test suites
      run: |
        cd production
        python test_advanced_suites.py

    - name: Run basic integration tests
      run: |
        cd production
        python test_basic_integration.py

    - name: WebSocket latency diagnostic
      run: |
        cd production
        python tools/ttfb_interrupt_test.py || echo "Latency test completed with notes"

    - name: Cache performance metrics
      run: |
        cd production
        python -c "
        try:
            from optimizations import ProsodyTemplateCache
            cache = ProsodyTemplateCache()
            print(f'Cache performance: {cache.get_hit_rate():.1%} hit rate')
        except ImportError:
            echo 'Cache metrics unavailable - optimizations not loaded'
        "

    - name: Baseline integrity check
      run: |
        cd production
        python scripts/verify_baseline.py

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          production/advanced_testing_results.json
          production/test_results_*.json

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3

    - name: Deploy to staging
      run: |
        echo "Deployment to staging environment"
        # Add deployment commands here

    - name: Run production smoke tests
      run: |
        echo "Running production smoke tests"
        # Add smoke test commands here
