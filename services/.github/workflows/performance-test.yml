name: Performance Testing

on:
  schedule:
    - cron: '0 3 * * 0'  # Weekly on Sunday at 3 AM
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # Load Testing
  load-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run load tests
      run: |
        k6 run tests/performance/load-test.js
        k6 run tests/performance/stress-test.js
        k6 run tests/performance/spike-test.js
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results/

  # Latency Testing
  latency-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install pytest pytest-benchmark requests asyncio aiohttp
    
    - name: Run latency tests
      run: |
        python tests/performance/latency-test.py
    
    - name: Upload latency results
      uses: actions/upload-artifact@v3
      with:
        name: latency-results
        path: latency-results/

  # Memory and CPU Testing
  resource-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install psutil memory-profiler pytest-benchmark
    
    - name: Run resource tests
      run: |
        python tests/performance/resource-test.py
    
    - name: Upload resource results
      uses: actions/upload-artifact@v3
      with:
        name: resource-results
        path: resource-results/

  # End-to-End Performance Testing
  e2e-performance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm install -g playwright
        npx playwright install
    
    - name: Run E2E performance tests
      run: |
        npx playwright test tests/performance/e2e-performance.spec.js
    
    - name: Upload E2E results
      uses: actions/upload-artifact@v3
      with:
        name: e2e-performance-results
        path: test-results/

  # Performance Regression Detection
  regression-test:
    runs-on: ubuntu-latest
    needs: [load-test, latency-test, resource-test, e2e-performance]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Compare with baseline
      run: |
        python scripts/performance/compare-baseline.py
    
    - name: Generate performance report
      run: |
        python scripts/performance/generate-report.py
    
    - name: Upload performance report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance-report/
    
    - name: Comment on PR
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('performance-report/summary.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Performance Test Results\n\n${report}`
          });


