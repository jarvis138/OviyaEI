from __future__ import annotations

from typing import Dict


class VulnerabilityReciprocationSystem:
    """Optional, careful self-disclosure phrasing (Rogers-aligned).
    Disabled by default unless feature flag enabled.
    """

    def __init__(self, enabled: bool = False):
        self.enabled = enabled

    def maybe_disclose(self, user_text: str, base_text: str) -> str:
        if not self.enabled:
            return base_text
        # Heuristic: deep vulnerability markers
        lower = (user_text or "").lower()
        if any(k in lower for k in ["ashamed", "i failed", "i'm scared", "i'm alone", "i hate myself"]):
            # Brief, normalize, pivot back
            extra = " I know that feeling—of being pulled down by it. What’s helping you cope right now?"
            return base_text + extra
        return base_text


